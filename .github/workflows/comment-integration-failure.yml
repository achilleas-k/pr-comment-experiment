---
name: "Schutzbot comments"
# This workflow runs when the Integration workflow reports a failure through
# an artifact. The Integration workflow itself doesn't fail if the testing or
# linting fails, instead it reports a failure through a shared artifact that
# this workflow reads and reports on. The failure is communicated to the author
# and reviewers of a PR without causing a failed action to appear.
#
# This workflow is run on a workflow_run trigger to have access to secrets.
#
# TODO: Actually do what the comment says.
#
# Based on https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#using-data-from-the-triggering-workflow

on:
  workflow_run:
    workflows: ["Integration"]
    types: [completed]

jobs:
  download-results:
    runs-on: ubuntu-latest
    # Map step outputs to job output
    outputs:
      pr_number: ${{ steps.read-results.outputs.pr_number }}
      test_result: ${{ steps.read-results.outputs.test_result }}
      lint_result: ${{ steps.read-results.outputs.lint_result }}

    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "results"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/results.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip results.zip

      - name: 'Read results'
        uses: actions/github-script@v6
        id: read-results
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');

            let pr_number = Number(fs.readFileSync('./pr'));
            core.setOutput("pr_number", pr_number);

            let test_result = String(fs.readFileSync('./test'));
            core.info("test result is " + test_result);
            core.setOutput("test_result", test_result);

            let lint_result = String(fs.readFileSync('./lint'));
            core.info("lint result is " + lint_result);
            core.setOutput("lint_result", lint_result);

  post-results:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    needs: download-results
    steps:
      - name: Add comment
        uses: mshick/add-pr-comment@v2
        env:
          pr_number: ${{ needs.download-results.outputs.pr_number }}
          test_result: ${{ needs.download-results.outputs.test_result }}
          lint_result: ${{ needs.download-results.outputs.lint_result }}
        with:
          issue: ${{ env.pr_number }}
          message: |
            Results:
              - Test: ${{ env.test_result }}
              - Lint: ${{ env.lint_result }}
